{"ast":null,"code":"var _jsxFileName = \"/Users/hemangshimpi/Desktop/UniDocs/Capstone/chatbot/frontend/src/Chatbot.jsx\",\n  _s = $RefreshSig$();\n// GSU Themed AI Chatbot - Final Version\n// Includes: Speech-to-text, avatars, auto-translation, dark mode, emoji picker (web component), text-to-speech\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { FaSmile, FaTrash, FaPaperPlane, FaDownload, FaMoon, FaSun, FaMicrophone } from \"react-icons/fa\";\nimport pantherLogo from \"./assets/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst quickReplies = [\"How to Apply\", \"Application Deadlines\", \"Other Deadlines\", \"Tuition and Fees\", \"Programs Available\", \"Courses Available\", \"Office Contacts\"];\nconst languages = [\"English\", \"Spanish\", \"French\", \"Chinese\"];\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState(() => {\n    const stored = localStorage.getItem(\"chat_messages\");\n    return stored ? JSON.parse(stored) : [{\n      sender: \"bot\",\n      text: \"Hello! ðŸ‘‹ I'm Pounce, your GSU chatbot. How can I help you today?\"\n    }, {\n      sender: \"bot\",\n      text: \"Which one would you like to learn about?\"\n    }];\n  });\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [showEmoji, setShowEmoji] = useState(false);\n  const [language, setLanguage] = useState(\"English\");\n  const [ttsEnabled, setTtsEnabled] = useState(false);\n  const endRef = useRef(null);\n  const emojiRef = useRef(null);\n  useEffect(() => {\n    var _endRef$current;\n    const picker = emojiRef.current;\n    if (picker) {\n      const handleEmojiClick = e => {\n        const emoji = e.detail.unicode;\n        setInput(prev => prev + emoji);\n        setShowEmoji(false);\n      };\n      picker.addEventListener(\"emoji-click\", handleEmojiClick);\n      return () => picker.removeEventListener(\"emoji-click\", handleEmojiClick);\n    }\n    (_endRef$current = endRef.current) === null || _endRef$current === void 0 ? void 0 : _endRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    localStorage.setItem(\"chat_messages\", JSON.stringify(messages));\n    const handleEmoji = e => {\n      var _emojiRef$current;\n      if (e.target.tagName === \"EMOJI-PICKER\") return;\n      if (showEmoji && !((_emojiRef$current = emojiRef.current) !== null && _emojiRef$current !== void 0 && _emojiRef$current.contains(e.target))) {\n        setShowEmoji(false);\n      }\n    };\n    document.addEventListener(\"click\", handleEmoji);\n    return () => document.removeEventListener(\"click\", handleEmoji);\n  }, [messages, showEmoji]);\n  const handleSend = e => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: input\n    }]);\n    setInput(\"\");\n    simulateBotReply(`Great! Here's info about \"${input}\".`);\n  };\n  const simulateBotReply = async text => {\n    setIsTyping(true);\n    let reply = text;\n    let translated = text;\n    if (language !== \"English\") {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"Translating...\"\n      }]);\n      try {\n        translated = await translateText(text, language);\n      } catch (err) {\n        console.error(\"Translation failed:\", err);\n      }\n    }\n    setMessages(prev => prev.filter(m => m.text !== \"Translating...\"));\n    setTimeout(() => {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: translated\n      }]);\n      if (ttsEnabled) speakText(translated);\n      setIsTyping(false);\n    }, 1200);\n  };\n  const translateText = async (text, targetLang) => {\n    if (!targetLang || targetLang === \"English\") return text;\n    try {\n      const res = await fetch(\"https://libretranslate.de/translate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          q: text,\n          source: \"en\",\n          target: targetLang.toLowerCase().slice(0, 2),\n          format: \"text\"\n        })\n      });\n      const data = await res.json();\n      return data.translatedText;\n    } catch (error) {\n      console.error(\"Translation failed:\", error);\n      return text;\n    }\n  };\n  const speakText = text => {\n    const synth = window.speechSynthesis;\n    if (!synth) return;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = language === \"English\" ? \"en-US\" : language;\n    synth.speak(utterance);\n  };\n  const handleQuickReply = reply => {\n    setMessages(prev => [...prev, {\n      sender: \"user\",\n      text: reply\n    }]);\n    simulateBotReply(`Here's some information about \"${reply}\".`);\n  };\n  const handleClear = () => {\n    setMessages([{\n      sender: \"bot\",\n      text: \"Hello! ðŸ‘‹ I'm Pounce, your GSU chatbot. How can I help you today?\"\n    }, {\n      sender: \"bot\",\n      text: \"Which one would you like to learn about?\"\n    }]);\n    localStorage.removeItem(\"chat_messages\");\n  };\n  const handleDownload = () => {\n    const chatText = messages.map(m => `${m.sender}: ${m.text}`).join(\"\\n\");\n    const blob = new Blob([chatText], {\n      type: \"text/plain\"\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"chat_history.txt\";\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n  const handleVoiceInput = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech recognition not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.start();\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setInput(prev => prev + transcript);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error\", event);\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode ? \"dark\" : \"\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center min-h-screen bg-gradient-to-br from-blue-50 via-white to-gray-100 dark:from-gray-800 dark:via-gray-900 dark:to-black px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-sm bg-white dark:bg-gray-800 rounded-xl shadow-2xl border border-gray-200 dark:border-gray-700 overflow-hidden relative\",\n        children: [showEmoji && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: emojiRef,\n          className: \"absolute bottom-20 left-1/2 -translate-x-1/2 z-50 bg-white dark:bg-gray-800 rounded-md shadow-lg border border-gray-300 dark:border-gray-600 animate-dropdown\",\n          children: /*#__PURE__*/_jsxDEV(\"emoji-picker\", {\n            class: \"w-72\",\n            style: {\n              height: \"330px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-r from-sky-600 to-blue-800 dark:from-gray-700 dark:to-gray-900 p-3 flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: pantherLogo,\n              alt: \"GSU Panther\",\n              className: \"h-8 w-8 drop-shadow-md\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-white font-semibold text-lg\",\n              children: \"Pounce\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center gap-2 text-white text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setDarkMode(d => !d),\n              title: \"Toggle Theme\",\n              children: darkMode ? /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 95\n              }, this) : /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 107\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              title: \"Emoji Picker\",\n              onClick: () => setShowEmoji(!showEmoji),\n              children: /*#__PURE__*/_jsxDEV(FaSmile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 85\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setTtsEnabled(t => !t),\n              title: \"Toggle Text-to-Speech\",\n              children: ttsEnabled ? \"ðŸ”Š\" : \"ðŸ”‡\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              title: \"Download Chat\",\n              onClick: handleDownload,\n              children: /*#__PURE__*/_jsxDEV(FaDownload, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              title: \"New Chat\",\n              onClick: handleClear,\n              className: \"px-2 py-1 bg-blue-700 text-white text-xs rounded hover:bg-blue-800 transition\",\n              children: \"New Chat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"bg-transparent outline-none text-white text-sm\",\n              value: language,\n              onChange: e => setLanguage(e.target.value),\n              children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: lang,\n                className: \"text-black\",\n                children: lang\n              }, lang, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-[420px] overflow-y-auto px-4 py-3 bg-gray-50 dark:bg-gray-900 space-y-2 text-sm\",\n          children: [messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `flex ${msg.sender === \"user\" ? \"justify-end\" : \"justify-start\"}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-start gap-2\",\n              children: [msg.sender === \"bot\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xl\",\n                children: \"\\uD83E\\uDD16\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 44\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `px-4 py-2 rounded-lg shadow-sm ${msg.sender === \"user\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-white\"}`,\n                children: msg.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this), msg.sender === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xl\",\n                children: \"\\uD83D\\uDC64\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-500 dark:text-gray-300 italic animate-pulseFast\",\n            children: \"Pounce is typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: endRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"px-4 pb-3 flex flex-col gap-2 bg-white dark:bg-gray-800\",\n          children: quickReplies.map((text, idx) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleQuickReply(text),\n            className: \"border border-blue-600 dark:border-blue-400 text-blue-600 dark:text-blue-300 px-3 py-2 text-sm rounded-md hover:bg-blue-50 dark:hover:bg-gray-700 transition\",\n            children: text\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSend,\n          className: \"flex items-center px-4 py-3 border-t bg-white dark:bg-gray-800 gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: input,\n            onChange: e => setInput(e.target.value),\n            placeholder: \"Ask me a question\",\n            className: \"flex-1 px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-400 transition-all\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleVoiceInput,\n            className: \"text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-500 text-lg transition transform hover:scale-110\",\n            children: /*#__PURE__*/_jsxDEV(FaMicrophone, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-500 text-lg transition transform hover:scale-110\",\n            children: /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"hYGb3WYCalRy+1WxxRZlZDo/DiU=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","FaSmile","FaTrash","FaPaperPlane","FaDownload","FaMoon","FaSun","FaMicrophone","pantherLogo","jsxDEV","_jsxDEV","quickReplies","languages","Chatbot","_s","messages","setMessages","stored","localStorage","getItem","JSON","parse","sender","text","input","setInput","isTyping","setIsTyping","darkMode","setDarkMode","showEmoji","setShowEmoji","language","setLanguage","ttsEnabled","setTtsEnabled","endRef","emojiRef","_endRef$current","picker","current","handleEmojiClick","e","emoji","detail","unicode","prev","addEventListener","removeEventListener","scrollIntoView","behavior","setItem","stringify","handleEmoji","_emojiRef$current","target","tagName","contains","document","handleSend","preventDefault","trim","simulateBotReply","reply","translated","translateText","err","console","error","filter","m","setTimeout","speakText","targetLang","res","fetch","method","headers","body","q","source","toLowerCase","slice","format","data","json","translatedText","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","lang","speak","handleQuickReply","handleClear","removeItem","handleDownload","chatText","map","join","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","handleVoiceInput","SpeechRecognition","webkitSpeechRecognition","alert","recognition","interimResults","maxAlternatives","start","onresult","event","transcript","results","onerror","className","children","ref","class","style","height","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","d","title","t","value","onChange","msg","i","idx","onSubmit","placeholder","_c","$RefreshReg$"],"sources":["/Users/hemangshimpi/Desktop/UniDocs/Capstone/chatbot/frontend/src/Chatbot.jsx"],"sourcesContent":["// GSU Themed AI Chatbot - Final Version\n// Includes: Speech-to-text, avatars, auto-translation, dark mode, emoji picker (web component), text-to-speech\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport {\n  FaSmile,\n  FaTrash,\n  FaPaperPlane,\n  FaDownload,\n  FaMoon,\n  FaSun,\n  FaMicrophone,\n} from \"react-icons/fa\";\nimport pantherLogo from \"./assets/logo.png\";\n\nconst quickReplies = [\n  \"How to Apply\",\n  \"Application Deadlines\",\n  \"Other Deadlines\",\n  \"Tuition and Fees\",\n  \"Programs Available\",\n  \"Courses Available\",\n  \"Office Contacts\",\n];\n\nconst languages = [\"English\", \"Spanish\", \"French\", \"Chinese\"];\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState(() => {\n    const stored = localStorage.getItem(\"chat_messages\");\n    return stored\n      ? JSON.parse(stored)\n      : [\n          {\n            sender: \"bot\",\n            text: \"Hello! ðŸ‘‹ I'm Pounce, your GSU chatbot. How can I help you today?\",\n          },\n          {\n            sender: \"bot\",\n            text: \"Which one would you like to learn about?\",\n          },\n        ];\n  });\n\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [darkMode, setDarkMode] = useState(false);\n  const [showEmoji, setShowEmoji] = useState(false);\n  const [language, setLanguage] = useState(\"English\");\n  const [ttsEnabled, setTtsEnabled] = useState(false);\n\n  const endRef = useRef(null);\n  const emojiRef = useRef(null);\n\n  useEffect(() => {\n    const picker = emojiRef.current;\n    if (picker) {\n      const handleEmojiClick = (e) => {\n        const emoji = e.detail.unicode;\n        setInput((prev) => prev + emoji);\n        setShowEmoji(false);\n      };\n      picker.addEventListener(\"emoji-click\", handleEmojiClick);\n      return () => picker.removeEventListener(\"emoji-click\", handleEmojiClick);\n    }\n\n    endRef.current?.scrollIntoView({ behavior: \"smooth\" });\n    localStorage.setItem(\"chat_messages\", JSON.stringify(messages));\n\n    const handleEmoji = (e) => {\n      if (e.target.tagName === \"EMOJI-PICKER\") return;\n      if (showEmoji && !emojiRef.current?.contains(e.target)) {\n        setShowEmoji(false);\n      }\n    };\n\n    document.addEventListener(\"click\", handleEmoji);\n    return () => document.removeEventListener(\"click\", handleEmoji);\n  }, [messages, showEmoji]);\n\n  const handleSend = (e) => {\n    e.preventDefault();\n    if (!input.trim()) return;\n    setMessages((prev) => [...prev, { sender: \"user\", text: input }]);\n    setInput(\"\");\n    simulateBotReply(`Great! Here's info about \"${input}\".`);\n  };\n\n  const simulateBotReply = async (text) => {\n    setIsTyping(true);\n    let reply = text;\n    let translated = text;\n\n    if (language !== \"English\") {\n      setMessages((prev) => [...prev, { sender: \"bot\", text: \"Translating...\" }]);\n      try {\n        translated = await translateText(text, language);\n      } catch (err) {\n        console.error(\"Translation failed:\", err);\n      }\n    }\n\n    setMessages((prev) => prev.filter(m => m.text !== \"Translating...\"));\n    setTimeout(() => {\n      setMessages((prev) => [...prev, { sender: \"bot\", text: translated }]);\n      if (ttsEnabled) speakText(translated);\n      setIsTyping(false);\n    }, 1200);\n  };\n\n  const translateText = async (text, targetLang) => {\n  if (!targetLang || targetLang === \"English\") return text;\n  try {\n    const res = await fetch(\"https://libretranslate.de/translate\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        q: text,\n        source: \"en\",\n        target: targetLang.toLowerCase().slice(0, 2),\n        format: \"text\",\n      }),\n    });\n    const data = await res.json();\n    return data.translatedText;\n  } catch (error) {\n    console.error(\"Translation failed:\", error);\n    return text;\n  }\n};\n\n\n   const speakText = (text) => {\n    const synth = window.speechSynthesis;\n    if (!synth) return;\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.lang = language === \"English\" ? \"en-US\" : language;\n    synth.speak(utterance);\n  };\n\n  const handleQuickReply = (reply) => {\n    setMessages((prev) => [...prev, { sender: \"user\", text: reply }]);\n    simulateBotReply(`Here's some information about \"${reply}\".`);\n  };\n\n  const handleClear = () => {\n    setMessages([\n      {\n        sender: \"bot\",\n        text: \"Hello! ðŸ‘‹ I'm Pounce, your GSU chatbot. How can I help you today?\",\n      },\n      {\n        sender: \"bot\",\n        text: \"Which one would you like to learn about?\",\n      },\n    ]);\n    localStorage.removeItem(\"chat_messages\");\n  };\n\n  const handleDownload = () => {\n    const chatText = messages.map((m) => `${m.sender}: ${m.text}`).join(\"\\n\");\n    const blob = new Blob([chatText], { type: \"text/plain\" });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"chat_history.txt\";\n    a.click();\n    window.URL.revokeObjectURL(url);\n  };\n\n  const handleVoiceInput = () => {\n    const SpeechRecognition =\n      window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech recognition not supported in this browser.\");\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"en-US\";\n    recognition.interimResults = false;\n    recognition.maxAlternatives = 1;\n    recognition.start();\n\n    recognition.onresult = (event) => {\n      const transcript = event.results[0][0].transcript;\n      setInput((prev) => prev + transcript);\n    };\n    recognition.onerror = (event) => {\n      console.error(\"Speech recognition error\", event);\n    };\n  };\n\n  return (\n    <div className={`${darkMode ? \"dark\" : \"\"}`}>\n      <div className=\"flex justify-center items-center min-h-screen bg-gradient-to-br from-blue-50 via-white to-gray-100 dark:from-gray-800 dark:via-gray-900 dark:to-black px-4\">\n        <div className=\"w-full max-w-sm bg-white dark:bg-gray-800 rounded-xl shadow-2xl border border-gray-200 dark:border-gray-700 overflow-hidden relative\">\n          {showEmoji && (\n            <div\n              ref={emojiRef}\n              className=\"absolute bottom-20 left-1/2 -translate-x-1/2 z-50 bg-white dark:bg-gray-800 rounded-md shadow-lg border border-gray-300 dark:border-gray-600 animate-dropdown\"\n            >\n              <emoji-picker\n                class=\"w-72\"\n                style={{ height: \"330px\" }}\n                \n              ></emoji-picker>\n            </div>\n          )}\n\n          {/* Header */}\n          <div className=\"bg-gradient-to-r from-sky-600 to-blue-800 dark:from-gray-700 dark:to-gray-900 p-3 flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <img src={pantherLogo} alt=\"GSU Panther\" className=\"h-8 w-8 drop-shadow-md\" />\n              <h1 className=\"text-white font-semibold text-lg\">Pounce</h1>\n            </div>\n            <div className=\"flex items-center gap-2 text-white text-sm\">\n              <button onClick={() => setDarkMode((d) => !d)} title=\"Toggle Theme\">{darkMode ? <FaSun /> : <FaMoon />}</button>\n              <button title=\"Emoji Picker\" onClick={() => setShowEmoji(!showEmoji)}><FaSmile /></button>\n              <button onClick={() => setTtsEnabled(t => !t)} title=\"Toggle Text-to-Speech\">\n                {ttsEnabled ? \"ðŸ”Š\" : \"ðŸ”‡\"}\n              </button>\n              <button title=\"Download Chat\" onClick={handleDownload}><FaDownload /></button>\n              <button title=\"New Chat\" onClick={handleClear} className=\"px-2 py-1 bg-blue-700 text-white text-xs rounded hover:bg-blue-800 transition\">New Chat</button>\n              <select\n                className=\"bg-transparent outline-none text-white text-sm\"\n                value={language}\n                onChange={(e) => setLanguage(e.target.value)}\n              >\n                {languages.map((lang) => (\n                  <option key={lang} value={lang} className=\"text-black\">{lang}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          {/* Messages */}\n          <div className=\"h-[420px] overflow-y-auto px-4 py-3 bg-gray-50 dark:bg-gray-900 space-y-2 text-sm\">\n            {messages.map((msg, i) => (\n              <div key={i} className={`flex ${msg.sender === \"user\" ? \"justify-end\" : \"justify-start\"}`}>\n                <div className=\"flex items-start gap-2\">\n                  {msg.sender === \"bot\" && <div className=\"text-xl\">ðŸ¤–</div>}\n                  <div className={`px-4 py-2 rounded-lg shadow-sm ${msg.sender === \"user\" ? \"bg-blue-600 text-white\" : \"bg-gray-200 text-gray-800 dark:bg-gray-700 dark:text-white\"}`}>\n                    {msg.text}\n                  </div>\n                  {msg.sender === \"user\" && <div className=\"text-xl\">ðŸ‘¤</div>}\n                </div>\n              </div>\n            ))}\n            {isTyping && (\n              <div className=\"text-gray-500 dark:text-gray-300 italic animate-pulseFast\">Pounce is typing...</div>\n            )}\n            <div ref={endRef} />\n          </div>\n\n          {/* Quick Replies */}\n          <div className=\"px-4 pb-3 flex flex-col gap-2 bg-white dark:bg-gray-800\">\n            {quickReplies.map((text, idx) => (\n              <button\n                key={idx}\n                onClick={() => handleQuickReply(text)}\n                className=\"border border-blue-600 dark:border-blue-400 text-blue-600 dark:text-blue-300 px-3 py-2 text-sm rounded-md hover:bg-blue-50 dark:hover:bg-gray-700 transition\"\n              >\n                {text}\n              </button>\n            ))}\n          </div>\n\n          {/* Input */}\n          <form\n            onSubmit={handleSend}\n            className=\"flex items-center px-4 py-3 border-t bg-white dark:bg-gray-800 gap-2\"\n          >\n            <input\n              type=\"text\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              placeholder=\"Ask me a question\"\n              className=\"flex-1 px-3 py-2 rounded-md border border-gray-300 dark:border-gray-600 bg-white dark:bg-gray-900 text-gray-800 dark:text-white focus:outline-none focus:ring-2 focus:ring-blue-400 transition-all\"\n            />\n            <button\n              type=\"button\"\n              onClick={handleVoiceInput}\n              className=\"text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-500 text-lg transition transform hover:scale-110\"\n            >\n              <FaMicrophone />\n            </button>\n            <button\n              type=\"submit\"\n              className=\"text-blue-600 hover:text-blue-800 dark:text-blue-300 dark:hover:text-blue-500 text-lg transition transform hover:scale-110\"\n            >\n              <FaPaperPlane />\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}